Db.java
..............
package com.cts.customer.connection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class Db {
	public static void main(String[] args) 
	{
		Connection con=null;
		try 
		{
			Class.forName("com.mysql.jdbc.Driver");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customer_db?useSSL=false","root","root");
			if(con!=null) 
			{
				System.out.println("db connection success");
			}
		} 
		catch (ClassNotFoundException e) 
		{
			e.printStackTrace();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		} 	
	}
}

---------------------------------------------------------------------------

CustomerController.java
.....................

package com.cts.customer.controller;


import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.cts.customer.entity.Customer;
import com.cts.customer.service.CustomerService;

@Controller
@RequestMapping("/customer")
public class CustomerController {
	
	@Autowired
	CustomerService customerService;
    
	@GetMapping("/list")
    public String listCustomers(Model theModel)
    {
		List<Customer> customers= customerService.getAllCustomers();
		theModel.addAttribute("customers",customers);
		customers.forEach(s -> System.out.println(s));
    	return "customer-list";
    }
	
    @GetMapping("/addCustomer")
	public String addEmployee(Model model) {
    	Customer c1=new Customer();
		model.addAttribute("customer",c1);
		return "customer-add-form";
	}
    
    @PostMapping("/saveCustomer")
	public String saveCustomer(@Valid @ModelAttribute("customer") Customer cus,BindingResult bind)
	{
    	if(bind.hasErrors())
    	{
    		System.out.println(bind);
    		return "customer-add-form";
    	}
    	else
    	{
    		customerService.saveCustomer(cus);
		   return "redirect:/customer/list";
    	}
	}
    
    @GetMapping("/updateCustomer")
    public String updateCustomer(@RequestParam("customerId") int id,Model model)
	{
    	Customer cus=customerService.getCustomer(id);
		model.addAttribute("customer", cus);
		return "customer-update-form";
	}
    
    @GetMapping("/deleteCustomer")
	public String delete(@RequestParam("customerId") int id)
	{
    	customerService.deleteCustomer(id);
		return "redirect:/customer/list";
	}
}

=-------------------------------------------------------------------
HomeController.java
.........................
package com.cts.customer.controller;


import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cts.customer.entity.Admin;

import org.springframework.web.bind.annotation.ModelAttribute;

@Controller
public class HomeController {
  @RequestMapping("/")
  public String displayWelcomePage(){
  	return "welcome" ;
  }
  @RequestMapping("/success")
  public String login(@ModelAttribute("admin") Admin adm) {
	if((adm.getUsername().equals("admin")) &&(adm.getPassword().equals("admin123")))
      {
    	  return "redirect:/customer/list";
      }
    else
      {
    	  return "login-failed";
      }
	  
  }
}


------------------------------------------------------------------------------------
CustomerDAO.java
................

package com.cts.customer.dao;



import java.util.List;

import com.cts.customer.entity.Customer;

public interface CustomerDAO {
  public List<Customer> getAllCustomers();
  public void saveCustomer(Customer cus);
  public Customer getCustomer(int id);
  public void deleteCustomer(int id);
}


---------------------------------------------------------------
CustomerDaoImpl.java
....................

package com.cts.customer.dao;


import java.util.List;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.cts.customer.entity.Customer;

@Repository
public class CustomerDaoImpl implements CustomerDAO {

	@Autowired
	SessionFactory factory;

	@Override
	public List<Customer> getAllCustomers() {
	    Session session =factory.getCurrentSession();
	    Query<Customer> query =session.createQuery("from Customer",Customer.class);
	    List<Customer> cusList=query.getResultList();
	    return cusList;
	}

	@Override
	public void saveCustomer(Customer cus) {
		Session session =factory.getCurrentSession();
		session.saveOrUpdate(cus);
		System.out.println(cus);
	}

	@Override
	public Customer getCustomer(int id) {
		Session session =factory.getCurrentSession();
		Customer customer=session.get(Customer.class, id);
		return customer;
	}

	@Override
	public void deleteCustomer(int id) {
		Session session =factory.getCurrentSession();
		Customer cu=session.get(Customer.class, id);
		session.delete(cu);
		System.out.println("Deleted!");
	}
}


---------------------------------------------------------------------------
Admin.java
................

package com.cts.customer.entity;


import javax.persistence.Embeddable;

@Embeddable
public class Admin {
 private String username;
 private String password;
public String getUsername() {
	return username;
}
public void setUsername(String username) {
	this.username = username;
}
public String getPassword() {
	return password;
}
public void setPassword(String password) {
	this.password = password;
}
}


---------------------------------------------------------------------------

Customer.java
..............

package com.cts.customer.entity;


import java.sql.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotEmpty;


@Entity
@Table(name="customer_management")
public class Customer {
	@Id
	@Column(name="customer_id")
    private int id;
	
	@Column(name="firstName")
	@NotEmpty(message="firstName cannot be null")
    private String firstName;
	
	@Column(name="lastName")
	@NotEmpty(message="lastName cannot be null")
    private String lastName;
	
	@Column(name="mail_id")
	@Email(message="email should be valid")
    private String email;
	
	@Column(name="contact_number")
	@NotEmpty(message="contact number cannot be null")
	@Pattern(regexp="(^$|[0-9]{10})",message="Enter 10 digit mobile number")
	private String contact;
	
	@Column(name="gender")
	@NotEmpty(message="gender cannot be null")
	private String gender;
	
	
	@Column(name="product_name")
	@NotEmpty(message="product_name cannot be null")
	private String product_name;
	

	
	@Column(name="{price")
	@Min(message="price minimum value is 1000",value=1000)
	private double price;
   
	public Customer() {}
	public Customer(int id,String firstName, String lastName, String email, String contact, String gender,
			String product_name, double price) {
		this.id=id;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.contact = contact;
		this.gender = gender;
		this.product_name = product_name;
		this.price = price;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getContact() {
		return contact;
	}
	public void setContact(String contact) {
		this.contact = contact;
	}
	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	
	public String getProduct_name() {
		return product_name;
	}
	public void setProduct_name(String product_name) {
		this.product_name = product_name;
	}
	
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	@Override
	public String toString() {
		return "Customer [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", email=" + email
				+ ", contact=" + contact + ", gender=" + gender +  ", product_name=" + product_name + ",  price=" + price
				+ "]";
	}
    
}
--------------------------------------------------------------------

CustomerService.java
..........................

package com.cts.customer.service;

import java.util.List;

import com.cts.customer.entity.Customer;

public interface CustomerService {

	public List<Customer> getAllCustomers();
	public void saveCustomer(Customer cus);
	public Customer getCustomer(int id);
	public void deleteCustomer(int id);
}

-------------------------------------------------------------------
CustomerServiceImpl.java
.............................

package com.cts.customer.service;

import java.util.List;

import com.cts.customer.entity.Customer;

public interface CustomerService {

	public List<Customer> getAllCustomers();
	public void saveCustomer(Customer cus);
	public Customer getCustomer(int id);
	public void deleteCustomer(int id);
}

---------------------------------------------------------------------

customer-add-form.jsp
............................

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" isELIgnored="false" %>
 <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Add Customer</title>
<style>
.error
{
color:red;
}
</style>
</head>
<body bgcolor="skyblue">
<center>
<h1>CUSTOMER MANAGEMENT SYSTEM</h1>
</center>
<h3>ADD CUSTOMER</h3>
<form:form action="saveCustomer" modelAttribute="customer" method="POST" >
		<table>
			<tbody>
			    <tr>
					<td><label>Customer_ID:</label></td>
					<td><form:input path="id" /></td>
				</tr>
				<tr>
					<td><label>First Name:</label></td>
					<td><form:input path="firstName" /></td>
					<form:errors path="firstName" cssClass="error"/>
				</tr>
				<tr>
					<td><label>Last Name:</label></td>
					<td><form:input path="lastName" /></td>
					<form:errors path="lastName" cssClass="error"/>
				</tr>
				<tr>
					<td><label>Email_ID:</label></td>
					<td><form:input path="email" /></td>
					<form:errors path="email" cssClass="error"/>
				</tr>
				<tr>
					<td><label>Contact number:</label></td>
					<td><form:input path="contact" /></td>
					<form:errors path="contact" cssClass="error"/>
				</tr>
				<tr>
					<td><label>Gender:</label></td>
					<td><form:input path="gender" /></td>
					<form:errors path="gender" cssClass="error"/>
				</tr>
			
				<tr>
					<td><label>Product_name:</label></td>
					<td><form:input path="product_name" /></td>
					<form:errors path="product_name" cssClass="error"/>
				</tr>
				
				<tr>
					<td><label>Price:</label></td>
					<td><form:input path="price" /></td>
					<form:errors path="price" cssClass="error"/>
				</tr>
				
				<tr>
					<td><input type="submit" value="Save" class="save"></td>
				</tr>
			</tbody>
		</table>
	</form:form>
	<p>
		<a href="http://localhost:8080/CustomerManagementSystem/employee-list.jsp">Back to Customer
			List</a>
	</p>
</body>
</html>
-----------------------------------------------------------
customer-list.jsp
.......................

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" isELIgnored="false" %>
 <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Customer List</title>
</head>
<body bgcolor="skyblue">

<h1>Customer Management System</h1>

<h3>CUSTOMER LIST</h3>
<div>
<input type="button" value="Add Customer" onclick="window.location.href='addCustomer';return false;" class="add-button"/>
</div>
<br>
<table border="1">
	    <tr>
		   <td>Customer_ID</td>
		   <td>First Name</td>
		   <td>Last Name</td>
		   <td>Email_ID</td>
		   <td>Contact number</td>
		   <td>Gender</td>
		   <td>Product_name</td>
	       <td>Price</td>
	       <td>Action</td>
		</tr>
		<c:forEach var="tempCustomers" items="${customers}">
		<c:url var="updateLink" value="/customer/updateCustomer">
				<c:param name="customerId" value="${tempCustomers.id}"></c:param>
		</c:url>
		<c:url var="deleteLink" value="/customer/deleteCustomer">
				<c:param name="customerId" value="${tempCustomers.id}"></c:param>
			</c:url>
			<tr>
				<td>${tempCustomers.id}</td>
				<td>${tempCustomers.firstName}</td>
				<td>${tempCustomers.lastName}</td>
				<td>${tempCustomers.email}</td>
				<td>${tempCustomers.contact}</td>
				<td>${tempCustomers.gender}</td>
				<td>${tempCustomers.product_name}</td>
				<td>${tempCustomers.price}</td>
				<td><a href="${updateLink}">Update</a>|
				<a href="${deleteLink}" onclick="if(!(confirm('Are you sure to delete'))) return false">Delete</a></td>
			</tr>
		</c:forEach>
	</table>
</body>
</html>
----------------------------------------------------------------------------
customer-update-form.jsp
..............................

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" isELIgnored="false" %>
 <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Update customer list</title>
</head>
<body bgcolor="orange">

<h1>CUSTOMER MANAGEMENT SYSTEM</h1>

<h3>ADD CUSTOMER</h3>
<form:form action="saveCustomer" modelAttribute="customer" method="POST" >
		<table>
			<tbody>
				<tr>
					<td><label>First Name:</label></td>
					<td><form:input path="firstName" /></td>
				</tr>
				<tr>
					<td><label>Last Name:</label></td>
					<td><form:input path="lastName" /></td>
				</tr>
				<tr>
					<td><label>Email_ID:</label></td>
					<td><form:input path="email" /></td>
				</tr>
				<tr>
					<td><label>Contact number:</label></td>
					<td><form:input path="contact" /></td>
				</tr>
				<tr>
					<td><label>Gender:</label></td>
					<td><form:input path="gender" /></td>
				</tr>
				<tr>
					<td><label>Product_name:</label></td>
					<td><form:input path="product_name" /></td>
				</tr>
				<tr>
					<td><label>Price:</label></td>
					<td><form:input path="price" /></td>
				</tr>
				
				<tr>
					<td><input type="submit" value="Save" class="save"></td>
				</tr>
			</tbody>
		</table>
	</form:form>
	<p>
		<a href="http://localhost:8080/CustomerManagementSystem/employee-list.jsp">Back to Customer
			List</a>
	</p>
</body>
</html>
--------------------------------------------------------------------

login-failed.jsp
.....................

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Login failed</title>
</head>
<body bgcolor="orange">
<h2>Login failed!!</h2>
<br>
<p><a href="http://localhost:8080/CustomerManagementSystem/">Back to login page</a></p>
</body>
</html>

------------------------------------------------------------------
spring-customer.xml
.......................

<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">


<context:component-scan base-package="com.cts"></context:component-scan>
<mvc:annotation-driven/>
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/view/" />
<property name="suffix" value=".jsp" />
</bean>
<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl"  value="jdbc:mysql://localhost:3306/customer_db?useSSL=false&amp;serverTimezone=UTC" />
        <property name="user" value="root" />
        <property name="password" value="root" />
   
<property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="30000" />
</bean>  
<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
<property name="dataSource" ref="myDataSource" />
<property name="packagesToScan" value="com.cts.customer" />
<property name="hibernateProperties">
  <props>
     <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
     <prop key="hibernate.show_sql">true</prop>
  </props>
</property>
</bean>
<bean id="messageSource"
    class="org.springframework.context.support.ResourceBundleMessageSource" >
    <property name="basenames" value="messages" />
    </bean>
<bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
</bean>
<tx:annotation-driven transaction-manager="myTransactionManager" />
<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
</beans>
--------------------------------------------------------------------
web.xml
....................

<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Customer_Management</display-name>
  <servlet>
  <servlet-name>dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  <init-param>
  <param-name>ContextConfigLocation</param-name>
  <param-value>/WEB-INF/spring-customer.xml</param-value>
  </init-param>
  </servlet>
  <servlet-mapping>
  <servlet-name>dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
--------------------------------------------------------------------------
index.jsp
............

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
 <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Customer Management System</title>
</head>
<body bgcolor="red">
<center>
<h1>Customer Management system</h1>
<br>
<form action="success" modelAttribute="admin">
<div>
User ID:<input type="text" name="username"/>
<br>
<br>
Password:<input type="password" name="password"/>
<br>
<br>
</center>
<p align="center" font size="20"><input type="submit" name="submit" value="Login"/></p>
</div>
</form>
</center>
</body>
</html>
---------------------------------------------------------------------------
pom.xml
............

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cognizant</groupId>
  <artifactId>CustomerManagementSystem</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>CustomerManagementSystem Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
  <springframework.version>5.0.2.RELEASE</springframework.version>
  </properties>
  
  <dependencies>
  <dependency>
   <groupId>org.hibernate</groupId>
   <artifactId>hibernate-validator</artifactId>
   <version>5.2.4.Final</version>
  </dependency>
  
  <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-webmvc</artifactId>
  <version>${springframework.version}</version>
  </dependency>
 
  <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-tx</artifactId>
  <version>${springframework.version}</version>
  </dependency>
  
  <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-orm</artifactId>
  <version>${springframework.version}</version>
  </dependency>
 
  <dependency>
  <groupId>org.hibernate</groupId>
  <artifactId>hibernate-core</artifactId>
  <version>5.2.12.Final</version>
  </dependency>
  
  <dependency>
  <groupId>org.hibernate</groupId>
  <artifactId>hibernate-c3p0</artifactId>
  <version>5.2.12.Final</version>
  </dependency>
  
  <dependency>
  <groupId>mysql</groupId>
  <artifactId>mysql-connector-java</artifactId>
  <version>5.1.47</version>
  </dependency>
  
  <dependency>
  <groupId>junit</groupId>
  <artifactId>junit</artifactId>
  <version>3.8.1</version>
  <scope>test</scope>
  </dependency>
  
  <dependency>
  <groupId>jstl</groupId>
  <artifactId>jstl</artifactId>
  <version>1.2</version>
  </dependency>
  
  <dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>3.1.0</version>
    <scope>provided</scope>
 </dependency>
  </dependencies>
  
  <build>
  <pluginManagement>
  <plugins>
  <plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-compiler-plugin</artifactId>
  <version>3.2</version>
  <configuration>
  <source>1.8</source>
  <target>1.8</target>
  </configuration>
  </plugin>
  </plugins>
  </pluginManagement>
  </build>
</project>


----------------------------
message.poperties
.......................

typeMismatch.customer.doj=Invalid date

